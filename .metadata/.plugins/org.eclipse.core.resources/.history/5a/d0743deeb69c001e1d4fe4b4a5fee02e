package com.employee.pkg.util;

import org.springframework.stereotype.Component;
import com.employee.pkg.entity.Employee;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Component
public class EmpUtil {

	public boolean validate(Employee e) {

		String name = "[a-zA-Z]+\\.?";
		String phNo = "\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}";
		String age = "^(0?[1-9]|[1-9][0-9]|[1][1-9][1-9]|200)$";
		String gmail = "^(?=.{1,64}@)[A-Za-z0-9_-]+(\\.[A-Za-z0-9_-]+)*@"
				+ "[^-][A-Za-z0-9-]+(\\.[A-Za-z0-9-]+)*(\\.[A-Za-z]{2,})$";
		String pasword = "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$";
		String dateOfBirth = "^\\d{4}-\\d{2}-\\d{2}$";

		log.info("Empolyee validation Started for name :"+e.getEmpName());
		if (!e.getEmpName().matches(name) && (e.getEmpName().matches(null))) {
             log.info("Employee validation is failed for name ");
             return false;
		}
		if (!e.getEmpLastName().matches(name) && (e.getEmpLastName().matches(null))) {
			log.info("Employee validation is failed for last name ");
			return false;
		}
		if (!e.getEmpAge().matches(age) && (e.getEmpAge().matches(null))) {
			log.info("Employee validation is failed for age ");
			return false;
		}
		if (!e.getEmpDateOfBirth().matches(dateOfBirth) && (e.getEmpDateOfBirth().matches(null))) {
			log.info("Employee validation is failed for dateOfBirth ");
			return false;
		}
		if (!e.getEmpWork().matches(name) && (e.getEmpWork().matches(null))) {
			log.info("Employee validation is failed for Employee Work ");
			return false;
			if (!e.getEmpPhNo().matches(name) && (e.getEmpPhNo().matches(null))) {
				log.info("Employee validation is failed for Employee phNo ");
				return false;
		}
		return true;
	}

}
